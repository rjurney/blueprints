There is helper support for a @TransactionalGraph@. This section discusses some of the key aspects of @TransactionalGraphHelper@.

h2. CommitManager

The @CommitManager@ class can be instantiated using @TransactionalGraphHelper.createCommitManager()@. A @CommitManager@ is useful when inserting large amounts of data into a @TransactionalGraph@. For example, a pattern that looks like this:

```java
int counter = 0;
txGraph.setTransactionMode(Mode.MANUAL);
txGraph.startTransaction();

while(doingStuff) {
  // do a graph manipulation
  counter++;
  if(counter % 1000 == 0) {
    System.out.print(".");
    txGraph.stopTransaction(Conclusion.SUCCESS);
    txGraph.startTransaction();
  }
}
txGraph.stopTransaction(Conclusion.SUCCESS);
```

can be turned into the following:

```java
CommitManager manager = TransactionalGraphHelper.createCommitManager(txGraph, 1000);
while(doingStuff) {
  // do a graph manipulation
  manager.incrCounter();
  if(manager.atCommit())
    System.out.print(".");
}
manager.close();
```